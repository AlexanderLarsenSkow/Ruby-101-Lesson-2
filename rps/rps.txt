User makes a choice 
Computer makes a choice 
The game displays the winner 

Rules: 3
Rock beats scissors 
Paper beats rock 
Scissors beats paper

New Rules: Need SEVEN MORE oh god.
Rock beats lizard x
Lizard beats Spock x
Spock Smashes Scissors x
Scissors beats lizard x
Lizard beats paper x
Paper beats Spock x
Spock beats rock 

Expected Input: 
User_choice R, P, S 

Expected Output: 
Computer_choice, then displayed results. 

Data_types: 
no arrays/hashes needed. 

Test Cases: 
User: paper 
Computer: rock 
"You got a point!"

Pseudo_Code: 
START PROGRAM
PROMPT user with information about the game 
GET user's choice 
CALCULATE computer choice with rand() 
CALCULATE game logic with game method 
DISPLAY results to user 
INCREMENT points to computer and to user.
LOOP / END if user is finished. 

Creativity: 
Rockbot_5000 
Think about having multiple challengers for the user LOL

Current Problems 

Tied Game gives a point to Rockbot.
SOLVED

Need to Give a Quit option to break out of the game

Need to display win and loss prompts.
SOLVED

Need to extract some of Main Game to a helper method
?

Look at Refactoring the Win Condition Methods like in the Rubocop Video.

Need to Ask User if they want to play again.
Think about how to reintialize the points variables to 0 at the loop's restart.

Things to do: 
- DONE! Declare Constants at the top
- DONE! Set up logic that allows the user to input the whole word, not just 'R' or 'L'
- DONE! Refactor the hash collection so that first or last determines who wins.
- DONE! System 'clear' and sleep for user experience
- Write a rules display message.
- Write a sleep method based on conditions. Sleeps for longer at the start of the program
		and sleeps for shorter after a round and doesn't sleep at all for a replay.

Whole Word or Abbreviation Feature: DONE!
input should work if it's the whole word capitalized or the whole word lower case.
input should work if it's the abbreviation of the word or the abbreviation lower case.




